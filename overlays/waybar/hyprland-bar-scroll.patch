From fed413b53ac24f31df801b0ffbeb5cebeadf2321 Mon Sep 17 00:00:00 2001
From: vawvaw <valentin@wiedekind1.de>
Date: Tue, 13 Feb 2024 17:55:11 +0100
Subject: [PATCH] hyprland/workspaces: Add `enable-bar-scroll` option

---
 include/modules/hyprland/workspaces.hpp |  4 +++
 man/waybar-hyprland-workspaces.5.scd    |  5 +++
 src/modules/hyprland/workspaces.cpp     | 42 +++++++++++++++++++++++++
 3 files changed, 51 insertions(+)

diff --git a/include/modules/hyprland/workspaces.hpp b/include/modules/hyprland/workspaces.hpp
index 82872348..e69bd6b6 100644
--- a/include/modules/hyprland/workspaces.hpp
+++ b/include/modules/hyprland/workspaces.hpp
@@ -128,6 +128,7 @@ class Workspaces : public AModule, public EventHandler {
   auto showSpecial() const -> bool { return m_showSpecial; }
   auto activeOnly() const -> bool { return m_activeOnly; }
   auto moveToMonitor() const -> bool { return m_moveToMonitor; }
+  auto barScroll() const -> bool { return m_barScroll; }
 
   auto getBarOutput() const -> std::string { return m_bar.output->name; }
 
@@ -181,6 +182,9 @@ class Workspaces : public AModule, public EventHandler {
   void loadPersistentWorkspacesFromConfig(Json::Value const& clientsJson);
   void loadPersistentWorkspacesFromWorkspaceRules(const Json::Value& clientsJson);
 
+  bool handleScroll(GdkEventScroll*) override;
+
+  bool m_barScroll = false;
   bool m_allOutputs = false;
   bool m_showSpecial = false;
   bool m_activeOnly = false;
diff --git a/man/waybar-hyprland-workspaces.5.scd b/man/waybar-hyprland-workspaces.5.scd
index 2d0641b4..d77ad578 100644
--- a/man/waybar-hyprland-workspaces.5.scd
+++ b/man/waybar-hyprland-workspaces.5.scd
@@ -47,6 +47,11 @@ Addressed by *hyprland/workspaces*
 	default: false ++
 	If set to false workspaces group will be shown only in assigned output. Otherwise, all workspace groups are shown.
 
+*enable-bar-scroll*: ++
+	typeof: bool ++
+	default: false ++
+	If set to false, you can't scroll to cycle throughout workspaces from the entire bar. If set to true this behaviour is enabled.
+
 *active-only*: ++
 	typeof: bool ++
 	default: false ++
diff --git a/src/modules/hyprland/workspaces.cpp b/src/modules/hyprland/workspaces.cpp
index 3c03c708..b442f0c7 100644
--- a/src/modules/hyprland/workspaces.cpp
+++ b/src/modules/hyprland/workspaces.cpp
@@ -88,6 +88,11 @@ auto Workspaces::parseConfig(const Json::Value &config) -> void {
     m_moveToMonitor = configMoveToMonitor.asBool();
   }
 
+  auto configBarScroll = config_["enable-bar-scroll"];
+  if (configBarScroll.isBool()) {
+    m_barScroll = configBarScroll.asBool();
+  }
+
   auto configSortBy = config_["sort-by"];
   if (configSortBy.isString()) {
     auto sortByStr = configSortBy.asString();
@@ -803,6 +808,12 @@ void Workspaces::initializeWorkspaces() {
   auto const workspacesJson = gIPC->getSocket1JsonReply("workspaces");
   auto const clientsJson = gIPC->getSocket1JsonReply("clients");
 
+  if (barScroll()) {
+    auto &window = const_cast<Bar &>(m_bar).window;
+    window.add_events(Gdk::SCROLL_MASK | Gdk::SMOOTH_SCROLL_MASK);
+    window.signal_scroll_event().connect(sigc::mem_fun(*this, &Workspaces::handleScroll));
+  }
+
   for (Json::Value workspaceJson : workspacesJson) {
     std::string workspaceName = workspaceJson["name"].asString();
     if ((allOutputs() || m_bar.output->name == workspaceJson["monitor"].asString()) &&
@@ -1196,4 +1207,35 @@ void WindowCreationPayload::moveToWorksace(std::string &new_workspace_name) {
   m_workspaceName = new_workspace_name;
 }
 
+bool Workspaces::handleScroll(GdkEventScroll *e) {
+  if (gdk_event_get_pointer_emulated((GdkEvent *)e)) {
+    /**
+     * Ignore emulated scroll events on window
+     */
+    return false;
+  }
+  auto dir = AModule::getScrollDir(e);
+  if (dir == SCROLL_DIR::NONE) {
+    return true;
+  }
+
+  bool increase;
+
+  if (dir == SCROLL_DIR::DOWN || dir == SCROLL_DIR::RIGHT) {
+    if (allOutputs()) {
+      gIPC->getSocket1Reply("dispatch workspace e+1");
+    } else {
+      gIPC->getSocket1Reply("dispatch workspace m+1");
+    }
+  } else if (dir == SCROLL_DIR::UP || dir == SCROLL_DIR::LEFT) {
+    if (allOutputs()) {
+      gIPC->getSocket1Reply("dispatch workspace e-1");
+    } else {
+      gIPC->getSocket1Reply("dispatch workspace m-1");
+    }
+  }
+
+  return true;
+}
+
 }  // namespace waybar::modules::hyprland
-- 
2.44.0

